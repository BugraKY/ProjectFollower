
@{
}

<style>
    .options {
        padding: 20px;
        background-color: rgba(191, 191, 191, 0.15);
        margin-top: 20px;
    }

    .caption {
        font-size: 18px;
        font-weight: 500;
    }

    .option {
        margin-top: 10px;
        display: inline-block;
    }
    .dx-tooltip-wrapper .dx-overlay-content .dx-popup-content {
        padding: 14px;
    }

/*    .showtime-preview > div:first-child {
        font-size: 12px;
        white-space: normal;

    }
    .showtime-preview {
        width: 100%;
        border-radius: 5px;
        padding-left: 5px;
    }


   .showtime-preview > div:not(:first-child) {
        font-size: 11px;
        white-space: normal;
    }
        */
    .movie-tooltip .movie-info {
        margin-left: 10px;
        vertical-align: top;
        text-align: left;
    }

    .movie-tooltip .movie-title {
        font-size: 1.5em;
        line-height: 40px;
    }

    .long-title h3 {
        font-family: 'Segoe UI Light', 'Helvetica Neue Light', 'Segoe UI', 'Helvetica Neue', 'Trebuchet MS', Verdana;
        font-weight: 200;
        font-size: 28px;
        text-align: center;
        margin-bottom: 20px;
    }

</style>
<main>

    <div id="scheduler"></div>

</main>


@section scripts
{
    <script>
        DevExpress.localization.locale(navigator.language);
        function showToast(event, value, type) {
            DevExpress.ui.notify(`${event} "${value}" task`, type, 800);
        }
        $(() => {
            $('#scheduler').dxScheduler({
                timeZone: 'America/Los_Angeles',
                dataSource: data,
                views: ['month', 'agenda'],
                currentView: 'agenda',
                currentDate: new Date(2021, 3, 27),
                showAllDayPanel: false,
                height: 600,
                crossScrollingEnabled: true,
                cellDuration: 20,
                editing: {
                    allowAdding: true,
                    allowDeleting: true,
                    allowUpdating: true,
                    allowResizing: true,
                    allowDragging: true,
                },
                onAppointmentAdded(e) {
                    showToast('Eklendi', e.appointmentData.movieId, 'success');
                    $.each(data, function (index, val) {
                        console.log(val.price);
                    });
                },
                onAppointmentUpdated(e) {
                    showToast('Güncellendi', e.appointmentData.movieId, 'info');
                    $.each(data, function (index, val) {
                        console.log(val.price);
                    });
                },
                onAppointmentDeleted(e) {
                    showToast('Silindi', e.appointmentData.movieId, 'warning');
                    $.each(data, function (index, val) {
                        console.log(val.price);
                    });
                },
                resources: [{
                    fieldExpr: 'movieId',
                    dataSource: moviesData,
                },
                    {
                        fieldExpr: 'priortyId',
                        dataSource: priortyData,
                        useColorAsDefault: true,
                    },
                   {
                    fieldExpr: 'theatreId',
                    dataSource: theatreData,
                }],
                appointmentTooltipTemplate(model) {
                    return getTooltipTemplate(getMovieById(model.appointmentData.movieId));
                },
                appointmentTemplate(model) {
                    const movieInfo = getMovieById(model.appointmentData.movieId) || {};

                    return $(`${"<div class='dx-scheduler-agenda-appointment-left-layout'><div class='dx-scheduler-agenda-appointment-marker';>"
                        + '</div></div><div class="dx-scheduler-agenda-appointment-right-layout"><div class="dx-scheduler-appointment-title">'}${model.appointmentData.price}</div>`
                        + `<div>${movieInfo.text}`
                        + '</div>'
                        + '</div>');
                },
                onAppointmentFormOpening(data) {
                    const { form } = data;
                    let movieInfo = getMovieById(data.appointmentData.movieId) || {};
                    let { startDate } = data.appointmentData;

                    form.option('items', [{
                        label: {
                            text: 'Movie',
                        },
                        editorType: 'dxSelectBox',
                        dataField: 'movieId',
                        editorOptions: {
                            items: moviesData,
                            displayExpr: 'text',
                            valueExpr: 'id',
                            onValueChanged(args) {
                                movieInfo = getMovieById(args.value);

                                form.updateData('director', movieInfo.director);
                                form.updateData('endDate', new Date(startDate.getTime() + 60 * 1000 * movieInfo.duration));
                            },
                        },
                    }, {
                        label: {
                            text: 'Konu',
                        },
                        name: 'price',
                        editorType: 'dxTextBox',
                        editorOptions: {
                            items: moviesData,
                            displayExpr: 'text',
                            valueExpr: 'id',
                            onValueChanged(args) {
                                movieInfo = getMovieById(args.value);

                                form.updateData('konu', movieInfo.konu);
                            },
                        },
                    }, {
                        dataField: 'startDate',
                        editorType: 'dxDateBox',
                        editorOptions: {
                            width: '100%',
                            type: 'date',
                            onValueChanged(args) {
                                startDate = args.value;

                                form.updateData('endDate', new Date(startDate.getTime()));
                            },
                        },
                    }, {
                        name: 'endDate',
                        dataField: 'endDate',
                        editorType: 'dxDateBox',
                        editorOptions: {
                            width: '100%',
                            type: 'datetime',
                            readOnly: true,
                        },
                    }, {
                        dataField: 'Öncelik',
                        editorType: 'dxRadioGroup',
                        editorOptions: {
                            value: movieInfo.priortyId,
                            dataSource: ['Normal', 'Acil'],
                            itemTemplate(itemData) {
                                return `${itemData}`;
                                
                            },
                        },
                    },
                    ]);
                },
            }).dxScheduler('instance');

            function getMovieById(id) {
                return DevExpress.data.query(moviesData)
                    .filter('id', id)
                    .toArray()[0];
            }

            function getTooltipTemplate(movieData) {
                return $(`${"<div class='movie-tooltip'>"}`
                    + '<div class=\'movie-info\'>'
                    + `<div class='movie-title'>${movieData.text} (${movieData.year})`
                    + '</div>'
                    + '<div>'
                    + `Status:${movieData.director
                    }</div>`
                    + '<div>'
                    + `Duration: ${movieData.duration} minutes`
                    + '</div>'
                    + '</div>'
                    + '</div>');
            }
        });

            

        const moviesData = [{
            id: 1,
            text: 'His Girl Friday',
            director: 'Howard Hawks',
            year: 1940,
            duration: 92,
            
        }, {
            id: 2,
            text: 'Royal Wedding',
            director: 'Stanley Donen',
            year: 1951,
            duration: 93,
            color: '#56ca85',
        }, {
            id: 3,
            text: 'A Star Is Born',
            director: 'William A. Wellman',
            year: 1937,
            duration: 111,
            
        }, {
            id: 4,
            text: 'The Screaming Skull',
            director: 'Alex Nicol',
            year: 1958,
            duration: 68,
            color: '#ff9747',
        }, {
            id: 5,
            text: "It's a Wonderful Life",
            director: 'Frank Capra',
            year: 1946,
            duration: 130,
            color: '#f05797',
        }, {
            id: 6,
            text: 'City Lights',
            director: 'Charlie Chaplin',
            year: 1931,
            duration: 87,
            color: '#2a9010',
        }];

        const theatreData = [{
            text: 'Cinema Hall 1',
            id: 0,
            color: '#000000',
        }, {
            text: 'Cinema Hall 2',
            id: 1,
            color: '#ffffff',
        },
        ];

        const priortyData = [{
            text: 'Normal',
            id: 0,
            color: '#4797fb',
        }, {
            text: 'Acil',
            id: 1,
            color: '#fb4747',
        },
        ];

        const data = [{
            priortyId: 0,
            movieId: 5,
            price: 10,
            startDate: new Date('2021-04-26T16:10:00.000Z'),
            endDate: new Date('2021-04-26T18:01:00.000Z'),
        }, {
            priortyId: 0,
            movieId: 1,
            price: 5,
            startDate: new Date('2021-04-26T18:30:00.000Z'),
            endDate: new Date('2021-04-26T20:02:00.000Z'),
        }, {
            priortyId: 0,
            movieId: 3,
            price: 15,
            startDate: new Date('2021-04-26T20:30:00.000Z'),
            endDate: new Date('2021-04-26T22:21:00.000Z'),
        }, {
            priortyId: 0,
            movieId: 4,
            price: 5,
            startDate: new Date('2021-04-26T23:00:00.000Z'),
            endDate: new Date('2021-04-27T00:08:00.000Z'),
        }, {
            
            priortyId: 0,
            movieId: 2,
            price: 10,
            startDate: new Date('2021-04-27T00:30:00.000Z'),
            endDate: new Date('2021-04-27T02:03:00.000Z'),
        }, {
            
            priortyId: 0,
            movieId: 1,
            price: 10,
            startDate: new Date('2021-04-27T02:30:00.000Z'),
            endDate: new Date('2021-04-27T04:02:00.000Z'),
        }, {
            
            priortyId: 0,
            movieId: 2,
            price: 10,
            startDate: new Date('2021-04-27T04:20:00.000Z'),
            endDate: new Date('2021-04-27T05:53:00.000Z'),
        }, {
            
            priortyId: 0,
            movieId: 5,
            price: 10,
            startDate: new Date('2021-04-27T16:10:00.000Z'),
            endDate: new Date('2021-04-27T18:20:00.000Z'),
        }, {
            
            priortyId: 0,
            movieId: 2,
            price: 5,
            startDate: new Date('2021-04-27T19:00:00.000Z'),
            endDate: new Date('2021-04-27T20:33:00.000Z'),
        }, {
            
            priortyId: 0,
            movieId: 3,
            price: 5,
            startDate: new Date('2021-04-27T21:00:00.000Z'),
            endDate: new Date('2021-04-27T22:51:00.000Z'),
        }, {
            
            priortyId: 0,
            movieId: 4,
            price: 5,
            startDate: new Date('2021-04-27T23:20:00.000Z'),
            endDate: new Date('2021-04-28T00:28:00.000Z'),
        }, {
            
            priortyId: 0,
            movieId: 1,
            price: 10,
            startDate: new Date('2021-04-28T01:00:00.000Z'),
            endDate: new Date('2021-04-28T02:32:00.000Z'),
        }, {
            
            priortyId: 0,
            movieId: 2,
            price: 15,
            startDate: new Date('2021-04-28T03:00:00.000Z'),
            endDate: new Date('2021-04-28T04:33:00.000Z'),
        }, {
            
            priortyId: 1,
            movieId: 4,
            price: 5,
            startDate: new Date('2021-04-28T04:50:00.000Z'),
            endDate: new Date('2021-04-28T05:58:00.000Z'),
        }, {
            
            priortyId: 1,
            movieId: 1,
            price: 5,
            startDate: new Date('2021-04-28T16:00:00.000Z'),
            endDate: new Date('2021-04-28T17:32:00.000Z'),
        },
        ];

</script>
}





